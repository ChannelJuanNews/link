{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { FormControl, FormLabel, FormErrorMessage, Input } from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport { AtSignIcon } from \"@chakra-ui/icons\";\n\nconst InputField = props => {\n  const [field, {\n    error\n  }] = useField(props);\n\n  if (props.name === \"username\") {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: !!error,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: field.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AtSignIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \";\", /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default InputField;","map":{"version":3,"sources":["/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","FormErrorMessage","Input","useField","AtSignIcon","InputField","props","field","error","name","label"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,EAKEC,KALF,QAMO,kBANP;AAOA,SAASC,QAAT,QAAyB,QAAzB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAQA,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AACvD,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqBL,QAAQ,CAACG,KAAD,CAAnC;;AAEA,MAAIA,KAAK,CAACG,IAAN,KAAe,UAAnB,EAA+B;AAC7B,wBACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAE,CAAC,CAACD,KAA1B;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA,kBAAiCH,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFF,oBAGE,QAAC,KAAD,kCAAWH,KAAX,GAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGE,KAAK,gBAAG,QAAC,gBAAD;AAAA,kBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkD,IAJ1D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA,gBAAiCH,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,kCAAWH,KAAX,GAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,KAAK,gBAAG,QAAC,gBAAD;AAAA,gBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAkD,IAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;AAuBA,eAAeH,UAAf","sourcesContent":["import React, { InputHTMLAttributes } from \"react\";\n\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\n\nimport { AtSignIcon } from \"@chakra-ui/icons\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  placeholder?: string;\n};\n\nconst InputField: React.FC<InputFieldProps> = (props) => {\n  const [field, { error }] = useField(props);\n\n  if (props.name === \"username\") {\n    return (\n      <FormControl isInvalid={!!error}>\n        <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n        <AtSignIcon />;\n        <Input {...field} {...props} />\n        {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n      </FormControl>\n    );\n  }\n\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n      <Input {...field} {...props} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}