{"ast":null,"code":"import _defineProperty from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { FormControl, FormLabel, FormErrorMessage, Input, InputGroup, InputLeftAddon, InputRightElement, IconButton } from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\nimport { AtSignIcon, CheckIcon, ViewIcon, CloseIcon } from \"@chakra-ui/icons\";\n\nvar InputField = function InputField(_ref) {\n  _s();\n\n  var _ = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  if (props.name === \"username\") {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: !!error,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: field.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: /*#__PURE__*/_jsxDEV(AtSignIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), error ? /*#__PURE__*/_jsxDEV(InputRightElement, {\n          children: error ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, _this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n            color: \"green.500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 49\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this);\n  }\n\n  console.log(props.name);\n\n  if (props.name === \"password\") {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: !!error,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: field.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"arai-label\": \"toggle-pass\",\n            icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 58\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","FormErrorMessage","Input","InputGroup","InputLeftAddon","InputRightElement","IconButton","useField","AtSignIcon","CheckIcon","ViewIcon","CloseIcon","InputField","_","size","props","field","error","name","label","console","log"],"mappings":"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","sourcesContent":["import React, { InputHTMLAttributes } from \"react\";\n\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\n\nimport { AtSignIcon, CheckIcon, ViewIcon, CloseIcon } from \"@chakra-ui/icons\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  placeholder?: string;\n};\n\nconst InputField: React.FC<InputFieldProps> = ({ size: _, ...props }) => {\n  const [field, { error }] = useField(props);\n\n  if (props.name === \"username\") {\n    return (\n      <FormControl isInvalid={!!error}>\n        <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n        <InputGroup>\n          <InputLeftAddon children={<AtSignIcon />} />\n          <Input {...field} {...props} />\n\n          {error ? (\n            <InputRightElement\n              children={error ? <CloseIcon /> : <CheckIcon color=\"green.500\" />}\n            />\n          ) : null}\n        </InputGroup>\n\n        {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n      </FormControl>\n    );\n  }\n\n  console.log(props.name);\n\n  if (props.name === \"password\") {\n    return (\n      <FormControl isInvalid={!!error}>\n        <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n        <InputGroup>\n          <Input {...field} {...props} />\n          <InputRightElement\n            children={\n              <IconButton arai-label=\"toggle-pass\" icon={<ViewIcon />} />\n            }\n          />\n        </InputGroup>\n\n        {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n      </FormControl>\n    );\n  }\n\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n      <Input {...field} {...props} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}