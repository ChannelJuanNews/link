{"ast":null,"code":"import _defineProperty from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { FormControl, FormLabel, FormErrorMessage, Input } from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\n\nvar InputField = function InputField(props) {\n  _s();\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  console.log(\"type of form is\", props);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: field.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), error ? /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/juanruelas/Desktop/Projects/link/link-web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","FormErrorMessage","Input","useField","InputField","props","field","error","console","log","name","label"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,EAKEC,KALF,QAMO,kBANP;AAOA,SAASC,QAAT,QAAyB,QAAzB;;AAQA,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAC5BF,QAAQ,CAACE,KAAD,CADoB;AAAA;AAAA,MAChDC,KADgD;AAAA,MACvCC,KADuC,iBACvCA,KADuC;;AAEvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,KAA/B;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE,KAA1B;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAED,KAAK,CAACI,IAA1B;AAAA,gBAAiCL,KAAK,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD,kCAAWL,KAAX,GAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA,aAFF,EAGGE,KAAK,gBAAG,QAAC,gBAAD;AAAA,gBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,aAAH,GAAkD,IAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAXD;;GAAMH,U;UACuBD,Q;;;KADvBC,U;AAaN,eAAeA,UAAf","sourcesContent":["import React, { InputHTMLAttributes } from \"react\";\n\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n} from \"@chakra-ui/react\";\nimport { useField } from \"formik\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  placeholder?: string;\n};\n\nconst InputField: React.FC<InputFieldProps> = (props) => {\n  const [field, { error }] = useField(props);\n  console.log(\"type of form is\", props);\n\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n      <Input {...field} {...props} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}