{"ast":null,"code":"import _defineProperty from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/Users/juanruelas/Desktop/Projects/link/link-web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/juanruelas/Desktop/Projects/link/link-web/src/pages/register/index.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { FormControl, FormLabel, FormErrorMessage } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\n\nvar Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n    },\n    children: function children() {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: form.errors.name && form.touched.name,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"name\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n            id: \"name\",\n            placeholder: \"name\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n            children: form.errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/juanruelas/Desktop/Projects/link/link-web/src/pages/register/index.tsx"],"names":["React","FormControl","FormLabel","FormErrorMessage","Formik","Form","Register","username","password","values","console","log","form","errors","name","touched","field"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,QAKO,kBALP;AAOA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;;AAIA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAQ;AAAA;;AAChD,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAPH;AAAA,cASG;AAAA,0BACC,QAAC,IAAD;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEG,IAAI,CAACC,MAAL,CAAYC,IAAZ,IAAoBF,IAAI,CAACG,OAAL,CAAaD,IAAzD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,QAAC,KAAD,kCAAWE,KAAX;AAAkB,YAAA,EAAE,EAAC,MAArB;AAA4B,YAAA,WAAW,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,QAAC,gBAAD;AAAA,sBAAmBJ,IAAI,CAACC,MAAL,CAAYC;AAA/B;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADD;AAAA;AATH;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAtBD;;KAAMR,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from \"@chakra-ui/react\";\n\nimport { Formik, Form } from \"formik\";\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\",\n      }}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {() => (\n        <Form>\n          <FormControl isInvalid={form.errors.name && form.touched.name}>\n            <FormLabel htmlFor=\"name\">First name</FormLabel>\n            <Input {...field} id=\"name\" placeholder=\"name\" />\n            <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n          </FormControl>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}